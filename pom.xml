<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.0.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.adev.common.parent</groupId>
	<artifactId>common-parent</artifactId>
	<name>common-parent</name>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Hoxton.SR4</spring-cloud.version>
		<swagger.version>2.8.0</swagger.version>
        <swagger-ui.version>2.8.0</swagger-ui.version>
        <java-jwt.version>3.10.3</java-jwt.version>
        <jjwt.version>0.9.1</jjwt.version>
        <common-base.version>1.0.0-SNAPSHOT</common-base.version>
		<common-exchange.version>1.0.0-SNAPSHOT</common-exchange.version>
        <mongo-java-driver.version>3.6.3</mongo-java-driver.version>
		<fastjson.version>1.2.52</fastjson.version>
		<jackson-databind.version>2.11.2</jackson-databind.version>
		<httpclient-version>4.5.6</httpclient-version>
		<httpcore-version>4.4.10</httpcore-version>
		<httpclient-cache-version>4.5.6</httpclient-cache-version>
		<netty-all-version>4.1.35.Final</netty-all-version>
		<rxjava-version>2.0.9</rxjava-version>
		<guava-version>22.0</guava-version>
		<commons-lang3-version>3.8.1</commons-lang3-version>
		<docker.registry>registry.cn-hongkong.aliyuncs.com</docker.registry>
		<docker.image.prefix>mdbiz</docker.image.prefix>
		<maven-dockerfile.version>1.3.6</maven-dockerfile.version>
		<maven-release.version>2.5.3</maven-release.version>
		<maven-surefire.version>3.0.0-M1</maven-surefire.version>
		<jaxb-api.version>2.3.0</jaxb-api.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger-ui.version}</version>
            </dependency>
            <dependency>
                <groupId>com.auth0</groupId>
      			<artifactId>java-jwt</artifactId>
                <version>${java-jwt.version}</version>
            </dependency>
            <dependency>
    			<groupId>io.jsonwebtoken</groupId>
    			<artifactId>jjwt</artifactId>
    			<version>${jjwt.version}</version>
			</dependency>
			<dependency>
            	<groupId>org.mongodb</groupId>
		    	<artifactId>mongo-java-driver</artifactId>
            	<version>${mongo-java-driver.version}</version>
        	</dependency>
        	<dependency>
				<groupId>com.adev.common.base</groupId>
				<artifactId>common-base</artifactId>
				<version>${common-base.version}</version>
			</dependency>
			<dependency>
				<groupId>com.adev.common.exchange</groupId>
				<artifactId>common-exchange</artifactId>
				<version>${common-exchange.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson-databind.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>${httpcore-version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient-cache</artifactId>
				<version>${httpclient-cache-version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-all</artifactId>
				<version>${netty-all-version}</version>
			</dependency>
			<dependency>
				<groupId>io.reactivex.rxjava2</groupId>
				<artifactId>rxjava</artifactId>
				<version>${rxjava-version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava-version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3-version}</version>
			</dependency>
			<dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
				<version>${jaxb-api.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<distributionManagement>
		<repository>
			<id>maven-releases</id>
			<url>http://47.106.103.44:8081/repository/maven-releases/</url>
		</repository>
		<snapshotRepository>
			<id>maven-snapshots</id>
			<url>http://47.106.103.44:8081/repository/maven-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>
	<build>
		<plugins>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>${maven-dockerfile.version}</version>
				<executions>
					<execution>
						<id>default</id>
						<phase>install
						</phase> <!-- if no explicit phase, to build image with mvn package and push it with mvn deploy -->
						<goals>
							<goal>build</goal>
							<goal>push</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<repository>${docker.registry}/${docker.image.prefix}/${project.artifactId}</repository>
					<tag>${project.version}</tag>
					<buildArgs>
						<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>
					<useMavenSettingsForAuth>true</useMavenSettingsForAuth>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven-release.version}</version>
				<configuration>
					<tagNameFormat>v@{project.version}</tagNameFormat>
					<autoVersionSubmodules>true</autoVersionSubmodules>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire.version}</version>
			</plugin>
		</plugins>
	</build>

</project>
